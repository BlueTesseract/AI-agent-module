def minimax(player, state, max_depth, current_depth):
    if game_end(state):
        if is_winner(player, state):
            return (win_value, state)
        elif is_winner(opponent(player), state):
            return (lost_value, state)
        else
            return (draw_value, state)

    if current_depth > max_depth:
        return (state_heuristic_function(player, state), state)

    res = []
    for s' in all_allowed_next_states(state):
        res.append(minimax(player, s', max_depth, current_depth+1))

    if is_player_turn(player, state):
        return max_from_next_state_list(res)
    else
        return min_from_next_state_list(res)
